(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{611:function(e,t,r){"use strict";r.r(t);var v=r(3),o=Object(v.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"路由守卫"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#路由守卫"}},[e._v("#")]),e._v(" 路由守卫")]),e._v(" "),t("ol",[t("li",[e._v("完整的导航解析流程")]),e._v(" "),t("li",[e._v("导航被触发。")]),e._v(" "),t("li",[e._v("在失活的组件里调用 beforeRouteLeave 守卫。")]),e._v(" "),t("li",[e._v("调用全局的 beforeEach 守卫。")]),e._v(" "),t("li",[e._v("在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。")]),e._v(" "),t("li",[e._v("在路由配置里调用 beforeEnter。")]),e._v(" "),t("li",[e._v("解析异步路由组件。")]),e._v(" "),t("li",[e._v("在被激活的组件里调用 beforeRouteEnter。")]),e._v(" "),t("li",[e._v("调用全局的 beforeResolve 守卫 (2.5+)。")]),e._v(" "),t("li",[e._v("导航被确认。")]),e._v(" "),t("li",[e._v("调用全局的 afterEach 钩子。")]),e._v(" "),t("li",[e._v("触发 DOM 更新。")]),e._v(" "),t("li",[e._v("调用 beforeRouteEnter 守卫中传给 next 的回调函数，创建好的组件实例会作为回调函数的参数传入。")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://router.vuejs.org/zh/guide/advanced/navigation-guards.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("VUE官方 导航守卫"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=o.exports}}]);