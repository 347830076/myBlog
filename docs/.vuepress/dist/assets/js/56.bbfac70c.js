(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{560:function(t,s,a){"use strict";a.r(s);var e=a(9),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vscode提高开发插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode提高开发插件"}},[t._v("#")]),t._v(" vscode提高开发插件")]),t._v(" "),a("p",[t._v("下面介绍的vscode, 英文才是插件名称， 中文是解释， 在扩展只需要输入英文名就可以搜索到了，install安装即可")]),t._v(" "),a("h4",{attrs:{id:"chinese-编辑器汉化包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chinese-编辑器汉化包"}},[t._v("#")]),t._v(" Chinese 编辑器汉化包")]),t._v(" "),a("p",[t._v("使用方法")]),t._v(" "),a("p",[t._v('安装后，在 locale.json 中添加 "locale": "zh-cn"，即可载入中文（简体）语言包。要修改 locale.json，你可以同时按下 Ctrl+Shift+P 打开命令面板， 输入 "Configure Display Language" 配置显示语言，回车。，选择 zh-cn (中文)， 如果你需要其他语言，则选择安装其他语言')]),t._v(" "),a("p",[t._v('mac 的话，经作者测试，按住 shift + win + p 打开命令面版，同样输入 "Configure Display Language" 配置显示语言，回车。，选择 zh-cn (中文)， 如果你需要其他语言，则选择安装其他语言')]),t._v(" "),a("h4",{attrs:{id:"auto-rename-tag-修改标签对-双标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auto-rename-tag-修改标签对-双标签"}},[t._v("#")]),t._v(" Auto Rename Tag 修改标签对（双标签）")]),t._v(" "),a("p",[t._v("这是一个修改标签对的插件,修改标签名的时候，回同时把前后两个标签名一起修改，支持HTML / XML")]),t._v(" "),a("h4",{attrs:{id:"auto-close-tag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auto-close-tag"}},[t._v("#")]),t._v(" Auto Close Tag")]),t._v(" "),a("p",[t._v("自动添加 HTML / XML 关闭标记")]),t._v(" "),a("h4",{attrs:{id:"html-snippets-标签的代码提示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-snippets-标签的代码提示"}},[t._v("#")]),t._v(" HTML Snippets 标签的代码提示")]),t._v(" "),a("p",[t._v("可为你提供 html 标签的代码提示，不用键入尖括号了。 就是输入标签名，会有提示，回车即可自动输入双标签")]),t._v(" "),a("h4",{attrs:{id:"bracket-pair-colorizer-各种括号高亮不同颜色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bracket-pair-colorizer-各种括号高亮不同颜色"}},[t._v("#")]),t._v(" Bracket Pair Colorizer  各种括号高亮不同颜色")]),t._v(" "),a("p",[t._v("为代码中的括号每一对括号都不同颜色，可以让开发者更加清晰明了嵌套层级关系")]),t._v(" "),a("h4",{attrs:{id:"css-peek-快速查看定位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-peek-快速查看定位"}},[t._v("#")]),t._v(" CSS Peek 快速查看定位")]),t._v(" "),a("p",[t._v("快速查看定位 CSS 定义非常的方便")]),t._v(" "),a("h4",{attrs:{id:"npm-intellisense-自动导入模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm-intellisense-自动导入模块"}},[t._v("#")]),t._v(" Npm Intellisense  自动导入模块")]),t._v(" "),a("p",[t._v("import、require npm 模块是自动补全")]),t._v(" "),a("h4",{attrs:{id:"open-in-browser-用浏览器打开"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#open-in-browser-用浏览器打开"}},[t._v("#")]),t._v(" open in browser 用浏览器打开")]),t._v(" "),a("p",[t._v("在文件右键 可以选择在浏览器预览。")]),t._v(" "),a("h4",{attrs:{id:"live-server-可以在当前页面打开本地服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#live-server-可以在当前页面打开本地服务"}},[t._v("#")]),t._v(" live server 可以在当前页面打开本地服务")]),t._v(" "),a("p",[t._v("这是一个为静态和动态页面启动具有实时重新加载功能的开发本地服务器。")]),t._v(" "),a("h4",{attrs:{id:"vscode-icons"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode-icons"}},[t._v("#")]),t._v(" vscode-icons")]),t._v(" "),a("p",[t._v("可以为你的 VSCode 的文件类型提供相应的图标")]),t._v(" "),a("h4",{attrs:{id:"path-intellisense"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#path-intellisense"}},[t._v("#")]),t._v(" Path Intellisense")]),t._v(" "),a("p",[t._v("可以很好的识别引入文件路径")]),t._v(" "),a("h4",{attrs:{id:"beautify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#beautify"}},[t._v("#")]),t._v(" Beautify")]),t._v(" "),a("p",[t._v("美化 javascript，JSON，CSS，Sass，和 HTML 在 Visual Studio 代码。")]),t._v(" "),a("h4",{attrs:{id:"javascript-es6-code-snippets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-es6-code-snippets"}},[t._v("#")]),t._v(" JavaScript (ES6) code snippets")]),t._v(" "),a("p",[t._v("JavaScript（ES6）代码段，以及快速输入")]),t._v(" "),a("h4",{attrs:{id:"vetur"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vetur"}},[t._v("#")]),t._v(" Vetur")]),t._v(" "),a("p",[t._v("vue语法提示")]),t._v(" "),a("h4",{attrs:{id:"debugger-for-chrome"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debugger-for-chrome"}},[t._v("#")]),t._v(" Debugger for Chrome")]),t._v(" "),a("p",[t._v("让 vscode 映射 chrome 的 debug 功能，静态页面都可以用 vscode 来打断点调试。")]),t._v(" "),a("h4",{attrs:{id:"stylelint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stylelint"}},[t._v("#")]),t._v(" stylelint")]),t._v(" "),a("p",[t._v("检验 CSS/SASS/LESS 代码规范")]),t._v(" "),a("h4",{attrs:{id:"eslint-自定义规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint-自定义规则"}},[t._v("#")]),t._v(" ESlint 自定义规则")]),t._v(" "),a("p",[t._v("按快捷键 Win + Shift + p (mac环境) 输入 setting，选择 Preference: Open Settings(JSON)，打开 JSON 格式的配置文件\n或者直接 win + ,  直接打开设置，然后点击右上角倒数第二个图标（打开设置(json))")]),t._v(" "),a("p",[t._v("在末尾添加以下配置：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[vue]"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"editor.defaultFormatter"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dbaeumer.vscode-eslint"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[javascript]"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"editor.defaultFormatter"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dbaeumer.vscode-eslint"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[typescript]"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"editor.defaultFormatter"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dbaeumer.vscode-eslint"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"editor.formatOnSave"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"editor.codeActionsOnSave"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"source.fixAll"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint.format.enable"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("配置含义：")]),t._v(" "),a("ul",[a("li",[t._v("eslint.format.enable：使用 ESlint 作为所有由 ESlint 验证的文件的格式化工具")]),t._v(" "),a("li",[t._v('"editor.defaultFormatter": "dbaeumer.vscode-eslint"：指定对应语言的默认格式化工具为我们装的 ESLint 插件')]),t._v(" "),a("li",[t._v('editor.codeActionsOnSave：用于指定当保存代码时需要编辑器执行的动作，里面的值 "source.fixAll": true 表示为包括 ESLint 的所有插件启用自动修复， 也可以通过 "source.fixAll.eslint": true 只开启 ESLint 的自动修复')]),t._v(" "),a("li",[t._v("editor.formatOnSave：保存文件时自动格式化，当启用了 editor.codeActionsOnSave 时建议关掉 editor.formatOnSave，如果同时打开会导致保存文件时格式化两次")])]),t._v(" "),a("h4",{attrs:{id:"editorconfig-for-vs-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#editorconfig-for-vs-code"}},[t._v("#")]),t._v(" EditorConfig for vs code")]),t._v(" "),a("p",[t._v("EditorConfig 有助于为跨越各种编辑器和 IDE 的同一项目的多个开发人员维护一致的编码样式。")])])}),[],!1,null,null,null);s.default=r.exports}}]);